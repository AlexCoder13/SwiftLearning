import Foundation

//1.
//Создайте множество целых чисел от 1 до 5. Так же создайте свойство, которое будет хранить рандомное значение от 1 до 10. Добавьте в множество это рандомное значение, если оно уже будет в множестве, то выведите на консоль сообщение: “item <…> already exists”, иначе “Item <…> added to collection”.


//2.
//Создайте новый кортеж на основе следующего:
//let numbers = (1, 2.4, 3)
//Только что бы элементы размещались в обратном порядке 3, 2.4, 1


//3.
//Создайте числовой массив. Добавьте в массив значение, которое внесет пользователь (рассматриваем только положительные значения), только в том случае если оно меньше минимального значения этого массива.


//4.
//Для решения этой задачи вам потребуется следующий словарь:
//var salaries = ["Tim": 4000, "Bob": 5500, "Taylor": 3000]
//Сперва найдите общую сумму значений данного словаря. Далее обновите значение по ключу “Bob” на 6000, используя метод updateValue(). Определите разницу на которую изменилось значение, и прибавьте эту разницу к общей сумме.


//5.
//Создайте два свойства, первое будет хранить имя человека, а второе фамилию. Создайте вычисляемое свойство, которое возвращает полное имя. Выведите полное имя на консоль.


//6.
//У вас есть свойство firstName:
//let firstName = "Tim"
//Создайте вычисляемое свойство, которое возвращает значение firstName и устанавливает новое значение для firstName, только если новое значение не пустая строка.


//7.
//В праздничный день в магазин игрушек приходит покупатель, если у пользователя есть карта клиента то ему в этот день дают 30 процентную скидку, если нет то 15 процентов.
//Посчитайте сколько заплатит пользователь за игрушку стоимостью 760 рублей, если у него есть карта.
//Это задание нужно решить с использованием тернарного оператора.


//8.
//Рассчитайте количество полных минут в 2170 секундах. Если секунд не будет то выводим на консоль сообщение : “<…> минут”, если есть секунды то выводим сообщение <…> минут и <…> секунд.
//Это задание нужно решить с использованием тернарного оператора.
